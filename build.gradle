plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.google.cloud.tools.jib' version '3.3.1'
}

group = 'com.fenixs'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '17'

ext {
    organizationName = 'fenixs'
    organizationUrl = 'https://fenixs.com'
    dockerUsername = 'jhuanghsu'
    dockerPassword = 'JHuang0128'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(
        'org.springframework.boot:spring-boot-starter-web',
        'org.springframework.boot:spring-boot-starter-data-jpa',
        'org.springframework.boot:spring-boot-starter-data-jdbc',
        'org.flywaydb:flyway-core',
        'com.github.javafaker:javafaker:1.0.2'
    )
    runtimeOnly (
        'org.postgresql:postgresql:42.5.1'
    )
    testImplementation (
        'org.springframework.boot:spring-boot-starter-test',
        'org.springframework.boot:spring-boot-starter-webflux',
        'org.testcontainers:testcontainers:1.18.1',
        'org.testcontainers:junit-jupiter:1.18.1',
        'org.testcontainers:postgresql:1.18.1',
        'org.assertj:assertj-core:3.20.0'
    )
    compileOnly (
        'org.projectlombok:lombok:1.18.24'
    )
    annotationProcessor (
        'org.projectlombok:lombok:1.18.24'
    )
}

tasks.named('test') {
    useJUnitPlatform()
}

jib {
    from {
        image = 'eclipse-temurin:17'
        platforms {
            platform {
                architecture = 'amd64'
                os = 'linux'
            }
            platform {
                architecture = 'arm64'
                os = 'linux'
            }
        }
    }
    to {
        image = "docker.io/${dockerUsername}/${project.group}:${project.version}"
        tags = ['latest']
        auth {
            username = "${dockerUsername}"
            password = "${dockerPassword}"
        }
    }
}